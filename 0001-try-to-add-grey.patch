From 0421434a6b3239923efc7d938c1724a9c6e984ca Mon Sep 17 00:00:00 2001
From: Dafna Hirschfeld <dafna3@gmail.com>
Date: Sun, 14 Oct 2018 11:58:29 +0300
Subject: [PATCH] try to add grey

---
 drivers/media/platform/vicodec/codec-fwht.c      | 10 ++++++++--
 drivers/media/platform/vicodec/codec-v4l2-fwht.c |  3 +++
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/vicodec/codec-fwht.c b/drivers/media/platform/vicodec/codec-fwht.c
index d380a74bcdfb..a61233f761c5 100644
--- a/drivers/media/platform/vicodec/codec-fwht.c
+++ b/drivers/media/platform/vicodec/codec-fwht.c
@@ -11,7 +11,7 @@
 
 #include <linux/string.h>
 #include "codec-fwht.h"
-
+#include <linux/videodev2.h>
 /*
  * Note: bit 0 of the header must always be 0. Otherwise it cannot
  * be guaranteed that the magic 8 byte sequence (see below) can
@@ -755,9 +755,13 @@ u32 fwht_encode_frame(struct fwht_raw_frame *frm,
 	u32 encoding;
 	u32 chroma_h = frm->height / frm->height_div;
 	u32 chroma_w = frm->width / frm->width_div;
+	if (!frm->cr || !frm->cb) {
+		chroma_h = chroma_w = 0;
+	}
+	
 	unsigned int chroma_size = chroma_h * chroma_w;
 
-	//printk(KERN_DEBUG  "dafna: %s\n",__func__);
+	printk(KERN_DEBUG  "dafna: %s rlco = %p\n",__func__,rlco);
 	rlco_max = rlco + size / 2 - 256;
 	encoding = encode_plane(frm->luma, ref_frm->luma, &rlco, rlco_max, cf,
 				frm->height, frm->width,
@@ -779,6 +783,8 @@ u32 fwht_encode_frame(struct fwht_raw_frame *frm,
 	if (encoding & FWHT_FRAME_UNENCODED)
 		encoding |= FWHT_CR_UNENCODED;
 	encoding &= ~FWHT_FRAME_UNENCODED;
+	printk(KERN_DEBUG  "dafna: %s\n: cf = %p, rlco = %p\n",__func__,cf,rlco);
+
 	cf->size = (rlco - cf->rlc_data) * sizeof(*rlco);
 	return encoding;
 }
diff --git a/drivers/media/platform/vicodec/codec-v4l2-fwht.c b/drivers/media/platform/vicodec/codec-v4l2-fwht.c
index 3605d8b248d9..f463424a5060 100644
--- a/drivers/media/platform/vicodec/codec-v4l2-fwht.c
+++ b/drivers/media/platform/vicodec/codec-v4l2-fwht.c
@@ -11,6 +11,7 @@
 #include "codec-v4l2-fwht.h"
 
 static const struct v4l2_fwht_pixfmt_info v4l2_fwht_pixfmts[] = {
+	{ V4L2_PIX_FMT_GREY,    1, 1, 1, 1, 0, 1, 1 },
 	{ V4L2_PIX_FMT_YUV420,  1, 3, 2, 1, 1, 2, 2 },
 	{ V4L2_PIX_FMT_YVU420,  1, 3, 2, 1, 1, 2, 2 },
 	{ V4L2_PIX_FMT_YUV422P, 1, 2, 1, 1, 1, 2, 1 },
@@ -73,6 +74,8 @@ int v4l2_fwht_encode(struct v4l2_fwht_state *state, u8 *p_in, u8 *p_out)
 	rf.chroma_step = info->chroma_step;
 
 	switch (info->id) {
+	case V4L2_PIX_FMT_GREY:
+		rf.cb = rf.cr = NULL;
 	case V4L2_PIX_FMT_YUV420:
 		rf.cb = rf.luma + size;
 		rf.cr = rf.cb + size / 4;
-- 
2.17.1

